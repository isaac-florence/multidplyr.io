% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/cluster-DBI-conn.R
\name{cluster_DBI_con}
\alias{cluster_DBI_con}
\alias{cluster_DBI_discon}
\title{DBI SQL connection in cluster}
\usage{
cluster_DBI_con(cluster, drv, ...)

cluster_DBI_discon(cluster)
}
\arguments{
\item{cluster}{\code{multidplyr_cluster} object has had DBI initiation}

\item{drv}{a DBI driver, e.g. \code{odbc::odbc()}}

\item{...}{additional arguments passed to DBI}
}
\description{
In order to initiate individual connections per worker,
the connection details need to be made available to the workers,
and DI connection objects created (and subsequently disconnected)

Disconnect multidplyr cluster workers from DBI connection
}
\details{
Use this function after creating a new cluster (\code{multidplyr::new_cluster(n)}),
with the same details used to create \strong{{DBI}} connections.

This creates a DBI connection object (\code{con}) on each worker which will require
disconnection as with any \strong{{DBI}} connection.
}
\section{Functions}{
\itemize{
\item \code{cluster_DBI_con}: 

\item \code{cluster_DBI_discon}: 
}}

\examples{
\dontrun{

cluster <- multidplyr::new_cluster()

cluster <- cluster_DBI_con(cluster, odbc::odbc, dsn = "my_dsn_name")

cluster <- cluster_DBI_discon(cluster)
}

}
